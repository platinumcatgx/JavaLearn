测试类的方法
public static void main(String[] args) throws Exception {
        //1.读取配置文件
        InputStream in = Resources.getResourceAsStream("SqlMapConfig.xml");
        //2.创建SqlSessionFactory工厂
        SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
        SqlSessionFactory factory = builder.build(in);
        //3.使用工厂生产SqlSession对象
        SqlSession sqlSession = factory.openSession();
        //4.使用SqlSession创建Dao接口的代理对象
        IUserDao userDao = sqlSession.getMapper(IUserDao.class);
        //5.使用代理对象执行方法
        List<User> users = userDao.findAll();
        for (User user : users) {
            System.out.println(user.toString());
        }
        //6.释放资源
        sqlSession.close();
        in.close();
    }

MyBatis工作流程

1.读取配置文件
    1.数据库连接信息,用于创建Connection对象
        <dataSource type="POOLED">
            <property name="driver" value="com.mysql.jdbc.Driver"/>
            <property name="url" value="jdbc:mysql://localhost:3306/mybatis"/>
            <property name="username" value="root"/>
            <property name="password" value="1234"/>
        </dataSource>
    2.映射配置信息
    <mappers>
        <mapper resource="com/gx/dao/IUserDao.xml"></mapper>
    </mappers>
      DAO配置文件中的配置:
       <mapper namespace="com.gx.dao.IUserDao">
          <select id="findAll" resultType="com.gx.domain.User">
              select * from user
          </select>
      </mapper>

2.获取SQL对象,创建PreparedSteatement
    根据DAO配置中的语句
3.执行查询

4.封装结果
    根据DAO配置resultType的属性
5.返回List
























