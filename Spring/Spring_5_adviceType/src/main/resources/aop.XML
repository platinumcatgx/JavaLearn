<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    配置spring的IOC,把service对象配置进来-->
    <bean id="accountservice" class="gx.service.impl.AccountService"></bean>

<!--    配置Logger类-->
    <bean id="logger" class="gx.utils.Logger"></bean>
    <aop:config>
        <aop:pointcut id="ptj" expression="execution(* gx.service.impl.*.*(..))"/>
        <aop:aspect id="logAdvice" ref="logger">
<!--&lt;!&ndash;前置通知&ndash;&gt;-->
<!--            <aop:before method="beforePrintLog" pointcut-ref="ptj" ></aop:before>-->
<!--&lt;!&ndash;后置通知&ndash;&gt;-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="ptj" ></aop:after-returning>-->
<!--&lt;!&ndash;异常通知&ndash;&gt;-->
<!--            <aop:after-throwing method="afterThowingPrintLog" pointcut-ref="ptj" ></aop:after-throwing>-->
<!--&lt;!&ndash;最终通知&ndash;&gt;-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="ptj" ></aop:after>-->
<!--
    配置切入点表达式 id: 指定表达式的唯一表示 , execution: 指定表达式的内容
    此标签写在aop:aspect标签内部只能在当前切面使用
    它写在aop:aspect外面所有切面都可以用
    顺序要求:在aop:aspect之前
 -->

<!--配置环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="ptj"></aop:around>
        </aop:aspect>
    </aop:config>

</beans>

































