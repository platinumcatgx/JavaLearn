说明文档：

客户端：

1.    声明主类Client的成员变量

这些变量都是在多处调用的，如果不声明为成员变量，利用传参的方法传递很麻烦，故在外声明。尤其是注释内容1.2的socket相关变量，不在外部声明将会导致socket关闭。

1.1  UI组件：连接、断开、发送、昵称、IP、端口、输入内容、在线列表、聊天内容

1.2  Socket相关：客户端socket，输入和输出

1.3  用户昵称：声明DefaultListModel类型的列表，向其内部添加数据可以自动同步到在线列表中

1.4  客户端线程：为了防止死锁，将客户端新建一个与UI界面无关的线程

2.    构造函数

2.1  调用UI函数显示窗口

3.    与连接服务器相关

3.1  连接服务器

3.1.1      获取用户昵称、服务器ip、port

3.1.2      New与socket相关

3.1.3      在线列表添加所有人标签

3.1.4      向服务器发送本地账号登陆

3.1.5      为客户端新建一个与UI分离的线程用于等待服务器发送消息

4.    UI相关

4.1  显示界面

4.2  添加事件监听

4.2.1      连接

4.2.2      发送：将消息按照固定协议发送

4.2.3      选择消息发送对象

4.3输出错误：红色

4.4输出私聊内容：黑色

4.5输出上线下线内容：蓝色

4.6输出广播内容：绿色

5. 客户端线程的内部类

考虑到读取服务器消息时调用readline会将进程死锁，故新建一个线程，该线程继承了Runnable接口，在构造函数被调用后自动执行run方法

       5.1构造函数

       5.2run()

              5.2.1对服务器消息进行解析（分割）

              5.2.1按照制定协议处理消息：

登陆: LOGIN@USERNAME

普通消息: MESSAGE@TO@FROM@CONTENT

6. 发送消息

7.消息分割器



服务端：

1.    在主类Server中声明必要的成员变量

1.1  UI组件

1.2  Socket相关：服务器socket

1.3  线程相关：服务器线程、记录每一个客户端的线程地图

1.4  用户昵称

2.    构造函数

3.    启动服务器

3.1建立socket

3.2新建服务器线程

3.3新建存储客户端线程的地图

4. UI相关

       4.1生成界面窗口

       4.2添加监听器：启动、发送消息、检验目标用户

       4.3输出消息内容：黑色

       4.4输出错误提示：红色

       4.5输出成功提示：绿色

5. 服务器线程内部类

       5.1isRuning用于确定服务器是否在运行

       5.2构造函数：调用构造函数后自动调用对应线程

       5.3run()

              5.3.1循环等待下一个客户端连接，注意，这里的socket在内部声明，保证每一个客户端的socket不是同一个。

              5.3.2每接收到一个客户端socket就为其新建一个客户端线程，保证每个客户端之间互不干扰

              5.3.3将新的客户端线程添加到记录客户端线程的地图中

6.客户端线程内部类

       6.1新建线程时首先调用初始化函数，接收登陆消息

              6.1.1为每一个其他用户转发该用户的登陆消息

              6.1.2为该用户发送已经在线的用户列表

              6.1.3在线用户增加该用户的昵称

       6.2run()第二次和以后调用该方法

              6.1阻塞等待客户端传送消息

              6.2收到消息后按照对应要求解析消息

                     6.2.1MESSAGE@TO@FROM@CONTENT

              6.3按照To指向的用户对消息进行单播或广播
————————————————
版权声明：本文为CSDN博主「bowean」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/bowean/article/details/79816863